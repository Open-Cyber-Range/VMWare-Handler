/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

// Advanced load balancer VirtualService object
type AlbVirtualService struct {
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string `json:"_schema,omitempty"`
	Self *SelfResourceLink `json:"_self,omitempty"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
	Revision int32 `json:"_revision,omitempty"`
	// Timestamp of resource creation
	CreateTime int64 `json:"_create_time,omitempty"`
	// ID of the user who created this resource
	CreateUser string `json:"_create_user,omitempty"`
	// Timestamp of last modification
	LastModifiedTime int64 `json:"_last_modified_time,omitempty"`
	// ID of the user who last modified this resource
	LastModifiedUser string `json:"_last_modified_user,omitempty"`
	// Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
	Protection string `json:"_protection,omitempty"`
	// Indicates system owned resource
	SystemOwned bool `json:"_system_owned,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// Unique identifier of this resource
	Id string `json:"id,omitempty"`
	// The type of this resource.
	ResourceType string `json:"resource_type,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []Tag `json:"tags,omitempty"`
	// Path of its parent
	ParentPath string `json:"parent_path,omitempty"`
	// Absolute path of this object
	Path string `json:"path,omitempty"`
	// This is a UUID generated by the system for realizing the entity object. In most cases this should be same as 'unique_id' of the entity. However, in some cases this can be different because of entities have migrated thier unique identifier to NSX Policy intent objects later in the timeline and did not use unique_id for realization. Realization id is helpful for users to debug data path to correlate the configuration with corresponding intent. 
	RealizationId string `json:"realization_id,omitempty"`
	// Path relative from its parent
	RelativePath string `json:"relative_path,omitempty"`
	// This is a UUID generated by the GM/LM to uniquely identify entites in a federated environment. For entities that are stretched across multiple sites, the same ID will be used on all the stretched sites. 
	UniqueId string `json:"unique_id,omitempty"`
	// subtree for this type within policy tree containing nested elements. 
	Children []ChildPolicyConfigResource `json:"children,omitempty"`
	// Intent objects are not directly deleted from the system when a delete is invoked on them. They are marked for deletion and only when all the realized entities for that intent object gets deleted, the intent object is deleted. Objects that are marked for deletion are not returned in GET call. One can use the search API to get these objects. 
	MarkedForDelete bool `json:"marked_for_delete,omitempty"`
	// Global intent objects cannot be modified by the user. However, certain global intent objects can be overridden locally by use of this property. In such cases, the overridden local values take precedence over the globally defined values for the properties. 
	Overridden bool `json:"overridden,omitempty"`
	// This configuration only applies if the VirtualService is in Legacy Active Standby HA mode and Load Distribution among Active Standby is enabled. This field is used to tag the VirtualService so that VirtualServices with the same tag will share the same Active ServiceEngine. VirtualServices with different tags will have different Active ServiceEngines. If one of the ServiceEngine's in the ServiceEngineGroup fails, all VirtualServices will end up using the same Active ServiceEngine. Redistribution of the VirtualServices can be either manual or automated when the failed ServiceEngine recovers. Redistribution is based on the auto redistribute property of the ServiceEngineGroup. Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2. Default value when not specified in API or module is interpreted by ALB Controller as ACTIVE_STANDBY_SE_1. 
	ActiveStandbySeTag string `json:"active_standby_se_tag,omitempty"`
	// Keep advertising Virtual Service via BGP even if it is marked down by health monitor. This setting takes effect for future Virtual Service flaps. To advertise current VSes that are down, please disable and re-enable the Virtual Service. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	AdvertiseDownVs bool `json:"advertise_down_vs,omitempty"`
	// Process request even if invalid client certificate is presented. Datascript APIs need to be used for processing of such requests. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	AllowInvalidClientCert bool `json:"allow_invalid_client_cert,omitempty"`
	AnalyticsPolicy *AlbAnalyticsPolicy `json:"analytics_policy,omitempty"`
	// Specifies settings related to analytics. It is a reference to an object of type AnalyticsProfile. 
	AnalyticsProfilePath string `json:"analytics_profile_path,omitempty"`
	// The name of the Contract/Graph associated with the Virtual Service. Should be in the <Contract name> <Graph name> format. This is applicable only for Service Integration mode with Cisco APIC Controller. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	ApicContractGraph string `json:"apic_contract_graph,omitempty"`
	// Enable application layer specific features for the Virtual Service. It is a reference to an object of type ApplicationProfile. Special default for Essentials edition is System-L4-Application. 
	ApplicationProfilePath string `json:"application_profile_path,omitempty"`
	// (internal-use)Applicable for Azure only. Azure Availability set to which this VS is associated. Internally set by the cloud connector. 
	AzureAvailabilitySet string `json:"azure_availability_set,omitempty"`
	// Select BGP peers, using peer label, for VsVip advertisement. Maximum of 128 items allowed. 
	BgpPeerLabels []string `json:"bgp_peer_labels,omitempty"`
	// (This is a beta feature). Sync Key-Value cache to the new SEs when VS is scaled out. For ex  SSL sessions are stored using VS's Key-Value cache. When the VS is scaled out, the SSL session information is synced to the new SE, allowing existing SSL sessions to be reused on the new SE. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	BulkSyncKvcache bool `json:"bulk_sync_kvcache,omitempty"`
	ClientAuth *AlbhttpClientAuthenticationParams `json:"client_auth,omitempty"`
	// close client connection on vs config update. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	CloseClientConnOnConfigUpdate bool `json:"close_client_conn_on_config_update,omitempty"`
	// Checksum of cloud configuration for VS. Internally set by cloud connector. 
	CloudConfigCksum string `json:"cloud_config_cksum,omitempty"`
	// It is a reference to an object of type Cloud.
	CloudName string `json:"cloud_name,omitempty"`
	// Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP, CLOUD_NSXT. Allowed in Basic(Allowed values- CLOUD_NONE,CLOUD_NSXT) edition, Essentials(Allowed values- CLOUD_NONE,CLOUD_VCENTER) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as CLOUD_NONE. 
	CloudType string `json:"cloud_type,omitempty"`
	ConnectionsRateLimit *AlbRateProfile `json:"connections_rate_limit,omitempty"`
	ContentRewrite *AlbContentRewriteProfile `json:"content_rewrite,omitempty"`
	// Creator name.
	CreatedBy string `json:"created_by,omitempty"`
	// Select the algorithm for QoS fairness. This determines how multiple Virtual Services sharing the same Service Engines will prioritize traffic over a congested network. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	DelayFairness bool `json:"delay_fairness,omitempty"`
	// Service discovery specific data including fully qualified domain name, type and Time-To-Live of the DNS record. Note that only one of fqdn and dns_info setting is allowed. Maximum of 1000 items allowed. 
	DnsInfo []AlbDnsInfo `json:"dns_info,omitempty"`
	// DNS Policies applied on the dns traffic of the Virtual Service. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	DnsPolicies []AlbDnsPolicies `json:"dns_policies,omitempty"`
	// Force placement on all SE's in service group (Mesos mode only). Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	EastWestPlacement bool `json:"east_west_placement,omitempty"`
	// Response traffic to clients will be sent back to the source MAC address of the connection, rather than statically sent to a default gateway. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Special default for Basic edition is false, Essentials edition is false, Enterprise is True. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	EnableAutogw bool `json:"enable_autogw,omitempty"`
	// Enable Route Health Injection using the BGP Config in the vrf context. 
	EnableRhi bool `json:"enable_rhi,omitempty"`
	// Enable Route Health Injection for Source NAT'ted floating IP Address using the BGP Config in the vrf context. 
	EnableRhiSnat bool `json:"enable_rhi_snat,omitempty"`
	// Enable or disable the Virtual Service. Default value when not specified in API or module is interpreted by ALB Controller as true. 
	Enabled bool `json:"enabled,omitempty"`
	// Error Page Profile to be used for this virtualservice.This profile is used to send the custom error page to the client generated by the proxy. It is a reference to an object of type ErrorPageProfile. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	ErrorPageProfilePath string `json:"error_page_profile_path,omitempty"`
	// Criteria for flow distribution among SEs. Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT. Allowed in Basic(Allowed values- LOAD_AWARE) edition, Essentials(Allowed values- LOAD_AWARE) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as LOAD_AWARE. 
	FlowDist string `json:"flow_dist,omitempty"`
	// Criteria for flow labelling. Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL. Default value when not specified in API or module is interpreted by ALB Controller as NO_LABEL. 
	FlowLabelType string `json:"flow_label_type,omitempty"`
	// DNS resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. 
	Fqdn string `json:"fqdn,omitempty"`
	// A list of NSX Groups representing the Clients which can access the Virtual IP of the Virtual Service. 
	GroupPaths []string `json:"group_paths,omitempty"`
	// Translate the host name sent to the servers to this value. Translate the host name sent from servers back to the value used by the client. 
	HostNameXlate string `json:"host_name_xlate,omitempty"`
	// HTTP Policies applied on the data traffic of the Virtual Service. 
	HttpPolicies []AlbhttpPolicies `json:"http_policies,omitempty"`
	// Ignore Pool servers network reachability constraints for Virtual Service placement. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	IgnPoolNetReach bool `json:"ign_pool_net_reach,omitempty"`
	// L4 Policies applied to the data traffic of the Virtual Service. 
	L4Policies []Albl4Policies `json:"l4_policies,omitempty"`
	// Limit potential DoS attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	LimitDoser bool `json:"limit_doser,omitempty"`
	// List of labels to be used for granular RBAC. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	Markers []AlbRoleFilterMatchLabel `json:"markers,omitempty"`
	// Maximum connections per second per client IP. Allowed values are 10-1000. Special values are 0- 'unlimited'. Default value when not specified in API or module is interpreted by ALB Controller as 0. 
	MaxCpsPerClient int64 `json:"max_cps_per_client,omitempty"`
	// Minimum number of UP pools to mark VS up.
	MinPoolsUp int64 `json:"min_pools_up,omitempty"`
	// Determines network settings such as protocol, TCP or UDP, and related options for the protocol. It is a reference to an object of type NetworkProfile. Special default for Essentials edition is System-TCP-Fast-Path. 
	NetworkProfilePath string `json:"network_profile_path,omitempty"`
	// Network security policies for the Virtual Service. It is a reference to an object of type NetworkSecurityPolicy. 
	NetworkSecurityPolicyPath string `json:"network_security_policy_path,omitempty"`
	PerformanceLimits *AlbPerformanceLimits `json:"performance_limits,omitempty"`
	// The pool group is an object that contains pools. It is a reference to an object of type PoolGroup. 
	PoolGroupPath string `json:"pool_group_path,omitempty"`
	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type Pool. 
	PoolPath string `json:"pool_path,omitempty"`
	// Remove listening port if VirtualService is down. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	RemoveListeningPortOnVsDown bool `json:"remove_listening_port_on_vs_down,omitempty"`
	RequestsRateLimit *AlbRateProfile `json:"requests_rate_limit,omitempty"`
	SamlSpConfig *AlbsamlspConfig `json:"saml_sp_config,omitempty"`
	// The Service Engine Group to use for this Virtual Service. Moving to a new SE Group is disruptive to existing connections for this VS. It is a reference to an object of type ServiceEngineGroup. 
	SeGroupName string `json:"se_group_name,omitempty"`
	// Security policy applied on the traffic of the Virtual Service. This policy is used to perform security actions such as Distributed Denial of Service (DDoS) attack mitigation, etc. It is a reference to an object of type SecurityPolicy. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	SecurityPolicyPath string `json:"security_policy_path,omitempty"`
	// Determines the network settings profile for the server side of TCP proxied connections. Leave blank to use the same settings as the client to VS side of the connection. It is a reference to an object of type NetworkProfile. 
	ServerNetworkProfilePath string `json:"server_network_profile_path,omitempty"`
	// Metadata pertaining to the Service provided by this virtual service. In Openshift/Kubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by Avi Vantage. 
	ServiceMetadata string `json:"service_metadata,omitempty"`
	// Select pool based on destination port.
	ServicePoolSelect []AlbServicePoolSelector `json:"service_pool_select,omitempty"`
	// List of Services defined for this Virtual Service. Maximum of 2048 items allowed. 
	Services []AlbService `json:"services,omitempty"`
	SidebandProfile *AlbSidebandProfile `json:"sideband_profile,omitempty"`
	// NAT'ted floating source IP Address(es) for upstream connection to servers. Maximum of 32 items allowed. 
	SnatIp []AlbIpAddr `json:"snat_ip,omitempty"`
	// GSLB pools used to manage site-persistence functionality. Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the GSLB manager. This is a read-only field for the user. It is a reference to an object of type Pool. 
	SpPoolPaths []string `json:"sp_pool_paths,omitempty"`
	// Select or create one or two certificates, EC and/or RSA, that will be presented to SSL/TLS terminated connections. It is a reference to an object of type SSLKeyAndCertificate. 
	SslKeyAndCertificatePaths []string `json:"ssl_key_and_certificate_paths,omitempty"`
	// Determines the set of SSL versions and ciphers to accept for SSL/TLS terminated connections. It is a reference to an object of type SSLProfile. 
	SslProfilePath string `json:"ssl_profile_path,omitempty"`
	// Select SSL Profile based on client IP address match. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	SslProfileSelectors []AlbsslProfileSelector `json:"ssl_profile_selectors,omitempty"`
	// Expected number of SSL session cache entries (may be exceeded). Allowed values are 1024-16383. Default value when not specified in API or module is interpreted by ALB Controller as 1024. 
	SslSessCacheAvgSize int64 `json:"ssl_sess_cache_avg_size,omitempty"`
	// The SSO Policy attached to the virtualservice. It is a reference to an object of type SSOPolicy. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	SsoPolicyPath string `json:"sso_policy_path,omitempty"`
	// List of static DNS records applied to this Virtual Service. These are static entries and no health monitoring is performed against the IP addresses. Maximum of 1000 items allowed. 
	StaticDnsRecords []AlbDnsRecord `json:"static_dns_records,omitempty"`
	// Topology Policies applied on the dns traffic of the Virtual Service based onGSLB Topology algorithm. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	TopologyPolicies []AlbDnsPolicies `json:"topology_policies,omitempty"`
	// Server network or list of servers for cloning traffic. It is a reference to an object of type TrafficCloneProfile. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	TrafficCloneProfilePath string `json:"traffic_clone_profile_path,omitempty"`
	// Knob to enable the Virtual Service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to True. Default value when not specified in API or module is interpreted by ALB Controller as true. 
	TrafficEnabled bool `json:"traffic_enabled,omitempty"`
	// Specify if this is a normal Virtual Service, or if it is the parent or child of an SNI-enabled virtual hosted Virtual Service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in Basic(Allowed values- VS_TYPE_NORMAL,VS_TYPE_VH_PARENT) edition, Essentials(Allowed values- VS_TYPE_NORMAL) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as VS_TYPE_NORMAL. 
	Type_ string `json:"type,omitempty"`
	// Use Bridge IP as VIP on each Host in Mesos deployments. Allowed in Basic(Allowed values- false) edition, Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	UseBridgeIpAsVip bool `json:"use_bridge_ip_as_vip,omitempty"`
	// Use the Virtual IP as the SNAT IP for health monitoring and sending traffic to the backend servers instead of the Service Engine interface IP. The caveat of enabling this option is that the VirtualService cannot be configured in an Active-Active HA mode. DNS based Multi VIP solution has to be used for HA & Non-disruptive Upgrade purposes. Allowed in Essentials(Allowed values- false) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	UseVipAsSnat bool `json:"use_vip_as_snat,omitempty"`
	// The exact name requested from the client's SNI-enabled TLS hello domain name field. If this is a match, the parent VS will forward the connection to this child VS. 
	VhDomainName []string `json:"vh_domain_name,omitempty"`
	// Specifies the Virtual Service acting as Virtual Hosting (SNI) parent. 
	VhParentVsUuid string `json:"vh_parent_vs_uuid,omitempty"`
	// List of Virtual Service IPs. While creating a 'Shared VS',please use vsvip_ref to point to the shared entities. 
	Vip []AlbVip `json:"vip,omitempty"`
	// Virtual Routing Context that the Virtual Service is bound to. This is used to provide the isolation of the set of networks the application is attached to. It is a reference to an object of type VrfContext. 
	VrfContextName string `json:"vrf_context_name,omitempty"`
	// Datascripts applied on the data traffic of the Virtual Service. 
	VsDatascripts []AlbvsDataScripts `json:"vs_datascripts,omitempty"`
	// Mostly used during the creation of Shared VS, this field refers to entities that can be shared across Virtual Services. It is a reference to an object of type VsVip. 
	VsvipPath string `json:"vsvip_path,omitempty"`
	// WAF policy for the Virtual Service. It is a reference to an object of type WafPolicy. Allowed in Basic edition, Essentials edition, Enterprise edition. 
	WafPolicyPath string `json:"waf_policy_path,omitempty"`
	// The Quality of Service weight to assign to traffic transmitted from this Virtual Service. A higher weight will prioritize traffic versus other Virtual Services sharing the same Service Engines. Allowed values are 1-128. Allowed in Basic(Allowed values- 1) edition, Essentials(Allowed values- 1) edition, Enterprise edition. Default value when not specified in API or module is interpreted by ALB Controller as 1. 
	Weight int64 `json:"weight,omitempty"`
}
