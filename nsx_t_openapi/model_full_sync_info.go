/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

// Represents details of the last full sync if full sync is not running, otherwise returns the status of current full sync. 
type FullSyncInfo struct {
	// End time of streaming full state from source
	DataStreamingFromSourceEndTime int64 `json:"data_streaming_from_source_end_time,omitempty"`
	// Details about full sync on sender side
	DataStreamingFromSourceProgress string `json:"data_streaming_from_source_progress,omitempty"`
	// Start time of streaming full state from source
	DataStreamingFromSourceStartTime int64 `json:"data_streaming_from_source_start_time,omitempty"`
	// Full sync end time
	EndTime int64 `json:"end_time,omitempty"`
	// Errors if any
	Errors []string `json:"errors,omitempty"`
	// Full sync id
	FullSyncId string `json:"fullSyncId,omitempty"`
	// Description of full sync reason
	Reason string `json:"reason,omitempty"`
	// Full sync can happen for various internal reasons, as well user can request for one. The code provides the classification of possible reasons to start a full sync.
	ReasonCode string `json:"reason_code,omitempty"`
	// End time of completing applying full state on receiver side
	ReceiverEndTime int64 `json:"receiver_end_time,omitempty"`
	// Start time of applying full state on receiver side
	ReceiverStartTime int64 `json:"receiver_start_time,omitempty"`
	// This is optional information, provides useful insights on receiver side once async channel hands over full state data to receiver. 
	ReceiverState string `json:"receiver_state,omitempty"`
	// Time taken by application receiver to apply the full state received
	ReceiverTimeToApplyInMillis int64 `json:"receiver_time_to_apply_in_millis,omitempty"`
	// This provides the insights into current full sync stage if in progress. 
	Stage string `json:"stage,omitempty"`
	// Full sync start time
	StartTime int64 `json:"start_time,omitempty"`
	// Full sync status
	Status string `json:"status,omitempty"`
	// Errors if any
	Warnings []string `json:"warnings,omitempty"`
}
