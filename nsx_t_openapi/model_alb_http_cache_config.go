/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

// Advanced load balancer HttpCacheConfig object
type AlbHttpCacheConfig struct {
	// Add an Age header to content served from cache, which indicates to the client the number of seconds the object has been in the cache. Default value when not specified in API or module is interpreted by ALB Controller as true. 
	AgeHeader bool `json:"age_header,omitempty"`
	// Enable/disable caching objects without Cache-Control headers. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	Aggressive bool `json:"aggressive,omitempty"`
	// If a Date header was not added by the server, add a Date header to the object served from cache. This indicates to the client when the object was originally sent by the server to the cache. Default value when not specified in API or module is interpreted by ALB Controller as true. 
	DateHeader bool `json:"date_header,omitempty"`
	// Default expiration time of cache objects received from the server without a Cache-Control expiration header. This value may be overwritten by the Heuristic Expire setting. Default value when not specified in API or module is interpreted by ALB Controller as 600. 
	DefaultExpire int64 `json:"default_expire,omitempty"`
	// Enable/disable HTTP object caching.When enabling caching for the first time, SE Group app_cache_percent must be set to allocate shared memory required for caching (A service engine restart is needed after setting/resetting the SE group value). Default value when not specified in API or module is interpreted by ALB Controller as false. 
	Enabled bool `json:"enabled,omitempty"`
	// If a response object from the server does not include the Cache-Control header, but does include a Last-Modified header, the system will use this time to calculate the Cache-Control expiration. If unable to solicit an Last-Modified header, then the system will fall back to the Cache Expire Time value. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	HeuristicExpire bool `json:"heuristic_expire,omitempty"`
	// Ignore client's cache control headers when fetching or storing from and to the cache. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	IgnoreRequestCacheControl bool `json:"ignore_request_cache_control,omitempty"`
	// Max size, in bytes, of the cache. The default, zero, indicates auto configuration. Default value when not specified in API or module is interpreted by ALB Controller as 0. 
	MaxCacheSize int64 `json:"max_cache_size,omitempty"`
	// Maximum size of an object to store in the cache. Default value when not specified in API or module is interpreted by ALB Controller as 4194304. 
	MaxObjectSize int64 `json:"max_object_size,omitempty"`
	// Blocklist string group of non-cacheable mime types. It is a reference to an object of type StringGroup. 
	MimeTypesBlockGroupPaths []string `json:"mime_types_block_group_paths,omitempty"`
	// Blocklist of non-cacheable mime types.
	MimeTypesBlockLists []string `json:"mime_types_block_lists,omitempty"`
	// Allowlist string group of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to (STAR)/(STAR). It is a reference to an object of type StringGroup. 
	MimeTypesGroupPaths []string `json:"mime_types_group_paths,omitempty"`
	// Allowlist of cacheable mime types. If both Cacheable Mime Types string list and string group are empty, this defaults to (STAR)/(STAR). 
	MimeTypesList []string `json:"mime_types_list,omitempty"`
	// Minimum size of an object to store in the cache. Default value when not specified in API or module is interpreted by ALB Controller as 100. 
	MinObjectSize int64 `json:"min_object_size,omitempty"`
	// Allow caching of objects whose URI included a query argument. When disabled, these objects are not cached. When enabled, the request must match the URI query to be considered a hit. Default value when not specified in API or module is interpreted by ALB Controller as false. 
	QueryCacheable bool `json:"query_cacheable,omitempty"`
	UriNonCacheable *AlbPathMatch `json:"uri_non_cacheable,omitempty"`
	// Add an X-Cache header to content served from cache, which indicates to the client that the object was served from an intermediate cache. Default value when not specified in API or module is interpreted by ALB Controller as true. 
	XcacheHeader bool `json:"xcache_header,omitempty"`
}
