/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

// Tier-1 instance configuration. 
type Tier1 struct {
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string `json:"_schema,omitempty"`
	Self *SelfResourceLink `json:"_self,omitempty"`
	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected.
	Revision int32 `json:"_revision,omitempty"`
	// Timestamp of resource creation
	CreateTime int64 `json:"_create_time,omitempty"`
	// ID of the user who created this resource
	CreateUser string `json:"_create_user,omitempty"`
	// Timestamp of last modification
	LastModifiedTime int64 `json:"_last_modified_time,omitempty"`
	// ID of the user who last modified this resource
	LastModifiedUser string `json:"_last_modified_user,omitempty"`
	// Protection status is one of the following: PROTECTED - the client who retrieved the entity is not allowed             to modify it. NOT_PROTECTED - the client who retrieved the entity is allowed                 to modify it REQUIRE_OVERRIDE - the client who retrieved the entity is a super                    user and can modify it, but only when providing                    the request header X-Allow-Overwrite=true. UNKNOWN - the _protection field could not be determined for this           entity. 
	Protection string `json:"_protection,omitempty"`
	// Indicates system owned resource
	SystemOwned bool `json:"_system_owned,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// Unique identifier of this resource
	Id string `json:"id,omitempty"`
	// The type of this resource.
	ResourceType string `json:"resource_type,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []Tag `json:"tags,omitempty"`
	// Path of its parent
	ParentPath string `json:"parent_path,omitempty"`
	// Absolute path of this object
	Path string `json:"path,omitempty"`
	// This is a UUID generated by the system for realizing the entity object. In most cases this should be same as 'unique_id' of the entity. However, in some cases this can be different because of entities have migrated thier unique identifier to NSX Policy intent objects later in the timeline and did not use unique_id for realization. Realization id is helpful for users to debug data path to correlate the configuration with corresponding intent. 
	RealizationId string `json:"realization_id,omitempty"`
	// Path relative from its parent
	RelativePath string `json:"relative_path,omitempty"`
	// This is a UUID generated by the GM/LM to uniquely identify entites in a federated environment. For entities that are stretched across multiple sites, the same ID will be used on all the stretched sites. 
	UniqueId string `json:"unique_id,omitempty"`
	// subtree for this type within policy tree containing nested elements. 
	Children []ChildPolicyConfigResource `json:"children,omitempty"`
	// Intent objects are not directly deleted from the system when a delete is invoked on them. They are marked for deletion and only when all the realized entities for that intent object gets deleted, the intent object is deleted. Objects that are marked for deletion are not returned in GET call. One can use the search API to get these objects. 
	MarkedForDelete bool `json:"marked_for_delete,omitempty"`
	// Global intent objects cannot be modified by the user. However, certain global intent objects can be overridden locally by use of this property. In such cases, the overridden local values take precedence over the globally defined values for the properties. 
	Overridden bool `json:"overridden,omitempty"`
	// Maximum number of ARP entries per transport node. 
	ArpLimit int32 `json:"arp_limit,omitempty"`
	// Indicates if logging should be enabled for the default whitelisting rule. This field is deprecated and recommended to change Rule logging field. Note that this field is not synchronized with default logging field. 
	DefaultRuleLogging bool `json:"default_rule_logging,omitempty"`
	// DHCP configuration for Segments connected to Tier-1. DHCP service is enabled in relay mode. 
	DhcpConfigPaths []string `json:"dhcp_config_paths,omitempty"`
	// Disable or enable gateway fiewall.
	DisableFirewall bool `json:"disable_firewall,omitempty"`
	// Flag to enable standby service router relocation. Standby relocation is not enabled until edge cluster is configured for Tier1. 
	EnableStandbyRelocation bool `json:"enable_standby_relocation,omitempty"`
	// Determines the behavior when a Tier-1 instance restarts after a failure. If set to PREEMPTIVE, the preferred node will take over, even if it causes another failure. If set to NON_PREEMPTIVE, then the instance that restarted will remain secondary. Only applicable when edge cluster is configured in Tier1 locale-service. 
	FailoverMode string `json:"failover_mode,omitempty"`
	FederationConfig *FederationGatewayConfig `json:"federation_config,omitempty"`
	// This field is deprecated and recommended to change Rule action field. Note that this field is not synchornied with default rule field. 
	ForceWhitelisting bool `json:"force_whitelisting,omitempty"`
	// Specify high-availability mode for Tier-1. 
	HaMode string `json:"ha_mode,omitempty"`
	IntersiteConfig *IntersiteGatewayConfig `json:"intersite_config,omitempty"`
	// Configuration IPv6 NDRA and DAD profiles. Either or both NDRA and/or DAD profiles can be configured. 
	Ipv6ProfilePaths []string `json:"ipv6_profile_paths,omitempty"`
	// Supports edge node allocation at different sizes for routing and load balancer service to meet performance and scalability requirements.   ROUTING: Allocate edge node to provide routing services.   LB_SMALL, LB_MEDIUM, LB_LARGE, LB_XLARGE: Specify size of load balancer service that will be configured on TIER1 gateway. 
	PoolAllocation string `json:"pool_allocation,omitempty"`
	QosProfile *GatewayQosProfileConfig `json:"qos_profile,omitempty"`
	// Route advertisement rules and filtering
	RouteAdvertisementRules []RouteAdvertisementRule `json:"route_advertisement_rules,omitempty"`
	// Enable different types of route advertisements. When not specified, routes to IPSec VPN local-endpoint subnets (TIER1_IPSEC_LOCAL_ENDPOINT) are automatically advertised. 
	RouteAdvertisementTypes []string `json:"route_advertisement_types,omitempty"`
	// Specify Tier-1 connectivity to Tier-0 instance. 
	Tier0Path string `json:"tier0_path,omitempty"`
	// Tier1 connectivity type for reference. Property value is not validated with Tier1 configuration.   ROUTED: Tier1 is connected to Tier0 gateway and routing is enabled.   ISOLATED: Tier1 is not connected to any Tier0 gateway.   NATTED: Tier1 is in ROUTED type with NAT configured locally. 
	Type_ string `json:"type,omitempty"`
}
