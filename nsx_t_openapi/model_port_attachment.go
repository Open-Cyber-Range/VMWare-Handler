/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

// Detail information about port attachment
type PortAttachment struct {
	// Indicate how IP will be allocated for the port
	AllocateAddresses string `json:"allocate_addresses,omitempty"`
	// ID used to identify/look up a child attachment behind a parent attachment 
	AppId string `json:"app_id,omitempty"`
	BmsInterfaceConfig *AttachedInterfaceEntry `json:"bms_interface_config,omitempty"`
	// If type is CHILD and the parent port is on the same segment as the child port, then this field should be VIF ID of the parent port. If type is CHILD and the parent port is on a different segment, then this field should be policy path of the parent port. If type is INDEPENDENT/STATIC, then this field should be transport node ID. 
	ContextId string `json:"context_id,omitempty"`
	// Set to PARENT when type field is CHILD. Read only field.
	ContextType string `json:"context_type,omitempty"`
	// List of Evpn tenant VLAN IDs the Parent logical-port serves in Evpn Route-Server mode. Only effective when attachment type is PARENT and the logical-port is attached to vRouter VM.
	EvpnVlans []string `json:"evpn_vlans,omitempty"`
	// Flag to indicate if hyperbus configuration is required.
	HyperbusMode string `json:"hyperbus_mode,omitempty"`
	// VIF UUID on NSX Manager. If the attachement type is PARENT, this property is required.
	Id string `json:"id,omitempty"`
	// Not valid when type field is INDEPENDENT, mainly used to identify traffic from different ports in container use case. 
	TrafficTag int64 `json:"traffic_tag,omitempty"`
	// Type of port attachment. STATIC is added to replace INDEPENDENT. INDEPENDENT type and PARENT type are deprecated.
	Type_ string `json:"type,omitempty"`
}
