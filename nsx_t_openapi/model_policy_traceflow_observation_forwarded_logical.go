/*
 * NSX-T Data Center Policy API
 *
 * VMware NSX-T Data Center Policy REST API
 *
 * API version: 3.2.1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nsx_t_openapi

type PolicyTraceflowObservationForwardedLogical struct {
	// The name of the component that issued the observation.
	ComponentName string `json:"component_name,omitempty"`
	// The sub type of the component that issued the observation.
	ComponentSubType string `json:"component_sub_type,omitempty"`
	// The type of the component that issued the observation.
	ComponentType string `json:"component_type,omitempty"`
	ResourceType string `json:"resource_type"`
	// the hop count for observations on the transport node that a traceflow packet is injected in will be 0. The hop count is incremented each time a subsequent transport node receives the traceflow packet. The sequence number of 999 indicates that the hop count could not be determined for the containing observation.
	SequenceNo int64 `json:"sequence_no,omitempty"`
	// This field contains the site path where this observation was generated.
	SitePath string `json:"site_path,omitempty"`
	// Timestamp when the observation was created by the transport node (milliseconds epoch)
	Timestamp int64 `json:"timestamp,omitempty"`
	// Timestamp when the observation was created by the transport node (microseconds epoch)
	TimestampMicro int64 `json:"timestamp_micro,omitempty"`
	// id of the transport node that observed a traceflow packet
	TransportNodeId string `json:"transport_node_id,omitempty"`
	// name of the transport node that observed a traceflow packet
	TransportNodeName string `json:"transport_node_name,omitempty"`
	// type of the transport node that observed a traceflow packet
	TransportNodeType string `json:"transport_node_type,omitempty"`
	// This field is specified when the traceflow packet matched a L3 firewall rule. 
	AclRuleId int64 `json:"acl_rule_id,omitempty"`
	// The id of the component that forwarded the traceflow packet.
	ComponentId string `json:"component_id,omitempty"`
	// The id of the destination component to which the traceflow packet was forwarded.
	DstComponentId string `json:"dst_component_id,omitempty"`
	// The name of the destination component to which the traceflow packet was forwarded.
	DstComponentName string `json:"dst_component_name,omitempty"`
	// The type of the destination component to which the traceflow packet was forwarded.
	DstComponentType string `json:"dst_component_type,omitempty"`
	// This field is specified when the traceflow packet matched a jump-to rule. 
	JumptoRuleId int64 `json:"jumpto_rule_id,omitempty"`
	// This field is specified when the traceflow packet matched a l2 rule. 
	L2RuleId int64 `json:"l2_rule_id,omitempty"`
	// The id of the logical port through which the traceflow packet was forwarded.
	LportId string `json:"lport_id,omitempty"`
	// The name of the logical port through which the traceflow packet was forwarded.
	LportName string `json:"lport_name,omitempty"`
	// This field is specified when the traceflow packet matched a NAT rule. 
	NatRuleId int64 `json:"nat_rule_id,omitempty"`
	// ARP_UNKNOWN_FROM_CP - Unknown ARP query result emitted by control plane ND_NS_UNKNOWN_FROM_CP - Unknown neighbor solicitation query result emitted by control plane UNKNOWN - Unknown resend type
	ResendType string `json:"resend_type,omitempty"`
	// The index of the service insertion component
	ServiceIndex int64 `json:"service_index,omitempty"`
	// The path index of the service insertion component
	ServicePathIndex int64 `json:"service_path_index,omitempty"`
	// The ttl of the service insertion component
	ServiceTtl int64 `json:"service_ttl,omitempty"`
	// This field specified the prefix IP address a traceflow packet matched in the whitelist in spoofguard.
	SpoofguardIp string `json:"spoofguard_ip,omitempty"`
	// The source MAC address of form: \"^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$\". For example: 00:00:00:00:00:00. 
	SpoofguardMac string `json:"spoofguard_mac,omitempty"`
	// This field specified the VLAN id a traceflow packet matched in the whitelist in spoofguard.
	SpoofguardVlanId int64 `json:"spoofguard_vlan_id,omitempty"`
	// MAC address of nexthop for service insertion(SI) in service VM(SVM) where the traceflow packet was received. 
	SvcNhMac string `json:"svc_nh_mac,omitempty"`
	// The translated destination IP address of VNP/NAT
	TranslatedDstIp string `json:"translated_dst_ip,omitempty"`
	// The translated source IP address of VPN/NAT
	TranslatedSrcIp string `json:"translated_src_ip,omitempty"`
	// This field is specified when the traceflow packet was forwarded by a VLAN logical network. 
	Vlan int64 `json:"vlan,omitempty"`
	// This field is specified when the traceflow packet was forwarded by an overlay logical network. 
	Vni int32 `json:"vni,omitempty"`
	// The path of the ACL rule that was applied to forward the traceflow packet
	AclRulePath string `json:"acl_rule_path,omitempty"`
	// The path of the component that forwarded the traceflow packet
	ComponentPath string `json:"component_path,omitempty"`
	// The path of the destination component to which the traceflow packet was forwarded
	DstComponentPath string `json:"dst_component_path,omitempty"`
	// Path of gateway or gateway interface
	InterfacePath string `json:"interface_path,omitempty"`
	// The path of the jump-to rule that was applied to the traceflow packet
	JumptoRulePath string `json:"jumpto_rule_path,omitempty"`
	// The path of the l2 rule that was applied to the traceflow packet
	L2RulePath string `json:"l2_rule_path,omitempty"`
	// The path of the NAT rule that was applied to forward the traceflow packet
	NatRulePath string `json:"nat_rule_path,omitempty"`
	// The path of the segment port into which the traceflow packet was forwared.
	SegmentPortPath string `json:"segment_port_path,omitempty"`
}
